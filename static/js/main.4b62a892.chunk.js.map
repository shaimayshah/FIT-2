{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","class","styles","container","Grid","spacing","justify","item","component","Card","xs","md","className","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","active","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","neededData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaimage","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b62a892.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"active\":\"Cards_active__1mwzX\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup'\n\n// To apply multiple class (CSS)\nimport cx from 'classnames'\n\nconst Cards = ({data :{confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return 'Loading...';\n    }\n    return (\n        <div class={styles.container}>\n            <Grid container spacing={3} justify='center'>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        {/* Basically the <p> tag for material UI, gutterbottom provides a bottom margin */}\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of total cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.active)}>\n                    <CardContent>\n                        {/* Basically the <p> tag for material UI, gutterbottom provides a bottom margin */}\n                        <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value - recovered.value - deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        {/* Basically the <p> tag for material UI, gutterbottom provides a bottom margin */}\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        {/* Basically the <p> tag for material UI, gutterbottom provides a bottom margin */}\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios' // Used to make api requests\n\nconst url = \"https://covid19.mathdro.id/api\"\n\n// Makes sense to use an async function here because its I/O. Also, a common practice. \n// Returns the data we need (country, global)\nexport const fetchData = async (country) => {\n    let changeableURL = url;\n\n     if(country) {\n         changeableURL = `${url}/countries/${country}`\n     }\n\n    try {\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\n        return {confirmed, recovered, deaths, lastUpdate};\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async() => {\n    try {\n        const {data} = await axios.get(`${url}/daily`);\n        \n        const neededData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total, \n            date: dailyData.reportDate\n        }));\n\n        return neededData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async() =>{\n    try{\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name)\n\n    } catch(error){\n        console.log(error);\n    }\n}","import React, {useState, useEffect} from 'react';\nimport { fetchDailyData} from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=> {\n        const fetchAPI = async() =>{\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    console.log(confirmed, recovered, deaths)\n\n    // If data has not been rendered, return null. \n    const lineChart = (\n        dailyData.length\n        ? \n        (<Line \n        data = {{\n            labels: dailyData.map(({date}) => date), /*returns all of the dates*/\n            datasets: [{\n                data:dailyData.map(({confirmed}) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n            }, {data:dailyData.map(({deaths}) => deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,}] \n        }}\n        />) : null\n    );\n\n    const barChart = (\n        confirmed \n        ? \n        (\n            <Bar  \n            data={{\n                labels: ['Infected', 'Active', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: [\"rgba(255, 0, 0, 0.5)\", \"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(0, 0, 0, 0.5)\"],\n                    data: [confirmed.value, confirmed.value-recovered.value-deaths.value ,recovered.value, deaths.value]\n                }]\n            }}\n            options = {{\n                legend: {display: false},\n                title: {display: true, text:`Current state in ${country}`},\n            }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart: lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core'\nimport styles from './CountryPicker.module.css'\n\nimport {fetchCountries} from '../../api'\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n\n    // UseEffect works with two parameters\n    useEffect(() => {\n        const fetchAPI = async() => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n    \n    // console.log(fetchedCountries)\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect default=\"\" onChange={(e) => {handleCountryChange(e.target.value)}}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key = {i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react'\n\nimport {Cards, Chart, CountryPicker} from './components';\nimport styles from './App.module.css'\nimport { fetchData } from './api'\nimport coronaimage from './images/image.png'\n\n// Better to use class rather than hooks when dealing with asynchronous data. \nclass App extends React.Component {\n\n    // Letting the data be seen outside of the scope of the async\n    // Initial States\n    state = {\n        data: {},\n        country: '',\n    }\n    // when component is being created and inserted in DOM. \n    // making a request to fetchData which is in index.js\n    async componentDidMount(){\n        const fetchedData = await fetchData()\n        this.setState({data:fetchedData})\n    }\n\n    handleCountryChange = async(country) => {\n        const fetchedData = await fetchData(country);\n\n        // fetch data\n        console.log(fetchedData);\n        // set state\n        this.setState(\n            { data: fetchedData, country: country }\n        );\n    }\n\n    render(){\n        return(\n        // Class name is this to ensure that there is no interference with other styles\n        <div className={styles.container}>\n            <img src = {coronaimage} className = {styles.image} alt=\"COVID\"></img>\n            <Cards data = {this.state.data}/>\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\n            <Chart data={this.state.data} country={this.state.country}/>\n        </div>\n        )\n    }\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\n// Get the div with id 'root' that is native to react. \nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}